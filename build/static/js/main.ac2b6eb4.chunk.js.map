{"version":3,"sources":["home.js","BooksAPI.js","search.js","App.js","index.js"],"names":["home","_this","this","react_default","a","createElement","className","props","books","currently_reading","length","map","book","i","key","style","width","height","backgroundImage","get_thumbnail","onChange","e","move_to","value","disabled","title","authors","want_to_read","read","react_router_dom","to","textDecoration","border","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","fetch","concat","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","state","results","searching","not_found","target","setState","BooksAPI","result","undefined","error","_this2","type","placeholder","BooksApp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","window","getItem","setItem","alert","parse","flag","forEach","obj","push","element","id","splice","imageLinks","thumbnail","react_router","exact","path","render","home_home","search_search","React","ReactDOM","src_App","document","getElementById"],"mappings":"4QAKqBA,mLAGR,IAAAC,EAAAC,KACL,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAEXH,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAIwC,IAA9CJ,KAAKK,MAAMC,MAAMC,kBAAkBC,OAE/BP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEVJ,KAAKK,MAAMC,MAAMC,kBAAkBE,IAAI,SAACC,EAAKC,GAEzC,OAGQV,EAAAC,EAAAC,cAAA,MAAIS,IAAKD,GACTV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaS,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAiB,OAAOjB,EAAKM,MAAMY,cAAcP,GAAM,OACrHT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQe,SAAU,SAACC,GAAD,OAAOpB,EAAKM,MAAMe,QAAQD,EAAET,EAAKC,IAAIU,MAAM,oBACzDpB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,OAAOC,UAAQ,GAA7B,cACArB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,oBAAd,qBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,cAAd,gBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,WAIRpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcM,EAAKa,OAClCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBM,EAAKc,gBAkBhEvB,EAAAC,EAAAC,cAAA,yBAQhBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAI+B,IAAzCJ,KAAKK,MAAMC,MAAMmB,aAAajB,OAE1BP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEVJ,KAAKK,MAAMC,MAAMmB,aAAahB,IAAI,SAACC,EAAKC,GAEpC,OAGQV,EAAAC,EAAAC,cAAA,MAAIS,IAAKD,GACTV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaS,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAiB,OAAOjB,EAAKM,MAAMY,cAAcP,GAAM,OACrHT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQe,SAAU,SAACC,GAAD,OAAOpB,EAAKM,MAAMe,QAAQD,EAAET,EAAKC,IAAIU,MAAM,cACzDpB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,OAAOC,UAAQ,GAA7B,cACArB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,oBAAd,qBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,cAAd,gBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,WAIRpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcM,EAAKa,OAClCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBM,EAAKc,gBAkBhEvB,EAAAC,EAAAC,cAAA,yBAUZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAIuB,IAAjCJ,KAAKK,MAAMC,MAAMoB,KAAKlB,OAElBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEVJ,KAAKK,MAAMC,MAAMoB,KAAKjB,IAAI,SAACC,EAAKC,GAE5B,OAGQV,EAAAC,EAAAC,cAAA,MAAIS,IAAKD,GACTV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaS,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAiB,OAAOjB,EAAKM,MAAMY,cAAcP,GAAM,OACrHT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQe,SAAU,SAACC,GAAD,OAAOpB,EAAKM,MAAMe,QAAQD,EAAET,EAAKC,IAAIU,MAAM,QACzDpB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,OAAOC,UAAQ,GAA7B,cACArB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,oBAAd,qBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,cAAd,gBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,WAIRpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcM,EAAKa,OAClCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBM,EAAKc,gBAkBhEvB,EAAAC,EAAAC,cAAA,2BAiBhBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACPH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAI,WACN3B,EAAAC,EAAAC,cAAA,UAAQU,MAAO,CAACgB,eAAe,OAAOC,OAAO,SAA7C,yBA7MUC,qBCJ5BC,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAuBNS,EAAS,SAACC,GAAD,OACpBC,MAAK,GAAAC,OAAIb,EAAJ,WAAkB,CACrBc,OAAQ,OACRP,QAAQQ,OAAAC,EAAA,EAAAD,CAAA,GACHR,EADE,CAELU,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAET,YACtBU,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKlD,SCnCFoC,6MAEjBe,MAAM,CACFd,MAAM,GACNe,QAAS,GACTC,WAAW,EACXC,WAAW,KAIflB,OAAO,SAACvB,GAEkB,KAAnBA,EAAE0C,OAAOxC,OAYZtB,EAAK+D,SAAS,CACVH,WAAY,EACZC,WAAY,EACZjB,MAAOxB,EAAE0C,OAAOxC,QAGpB0C,EAAgB5C,EAAE0C,OAAOxC,OAAOgC,KAAK,SAAAW,QAGrBC,IAATD,GAAuBA,EAAOE,MAU7BnE,EAAK+D,SAAS,CACVJ,QAAU,GACVE,UAAgC,KAArB7D,EAAK0D,MAAMd,MACtBgB,WAAU,IAXd5D,EAAK+D,SAAS,CACVJ,QAAqB,OAAXM,EAAkBA,EAAS,GACrCJ,WAAU,EACVD,WAAU,OAxBlB5D,EAAK+D,SAAS,CACVJ,QAAU,GACVE,WAAU,EACVD,WAAU,EACVhB,MAAMxB,EAAE0C,OAAOxC,iFAuClB,IAAA8C,EAAAnE,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAEXH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAI,KACP3B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeS,MAAO,CAACgB,eAAe,OAAOC,OAAO,SAAtE,UAIL7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAEbH,EAAAC,EAAAC,cAAA,SAAOiE,KAAK,OAAOC,YAAY,4BAA4BnD,SAAU,SAACC,GAAD,OAAKgD,EAAKzB,OAAOvB,QAI1FlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAKsB,IAA9BJ,KAAKyD,MAAMC,QAAQlD,QAAqC,KAArBR,KAAKyD,MAAMd,MAE1C1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEVJ,KAAKyD,MAAMC,QAAQjD,IAAI,SAACC,EAAKC,GAEzB,OAGQV,EAAAC,EAAAC,cAAA,MAAIS,IAAKD,GACTV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaS,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAiB,OAAOmD,EAAK9D,MAAMY,cAAcP,GAAM,OACrHT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQe,SAAU,SAACC,GAAD,OAAOgD,EAAK9D,MAAMe,QAAQD,EAAET,EAAKC,IAAIU,MAAM,QACzDpB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,OAAOC,UAAQ,GAA7B,cACArB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,oBAAd,qBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,cAAd,gBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,WAIRpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcM,EAAKa,OAClCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBM,EAAKc,gBAoBhExB,KAAKyD,MAAME,UAAY1D,EAAAC,EAAAC,cAAA,0BAA2C,KAAnBH,KAAKyD,MAAMd,MAAa1C,EAAAC,EAAAC,cAAA,0BAAwBH,KAAKyD,MAAMG,UAAY3D,EAAAC,EAAAC,cAAA,uBAAqBF,EAAAC,EAAAC,cAAA,oCA5HnI4B,aCqVrBuC,cApVb,SAAAA,IAAa,IAAAvE,EAAA,OAAAgD,OAAAwB,EAAA,EAAAxB,CAAA/C,KAAAsE,IACXvE,EAAAgD,OAAAyB,EAAA,EAAAzB,CAAA/C,KAAA+C,OAAA0B,EAAA,EAAA1B,CAAAuB,GAAAI,KAAA1E,QAWFoB,QAAQ,SAACD,EAAET,EAAKE,GAKV,GAAoB,qBAAjBO,EAAE0C,OAAOxC,MAA2B,CAOnC,GAAsD,OAAnDsD,OAAOzC,aAAa0C,QAAQ,qBAA4B,CAEvD,IAAIrE,EAAkB,CAACG,GACvBiE,OAAOzC,aAAa2C,QAAQ,oBAAoB1B,KAAKC,UAAU7C,IAC/DuE,MAAM,uDAGL,CAED,IAAIvE,EAAkB4C,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,sBACzDI,GAAK,EAETzE,EAAkB0E,QAAQ,SAAAC,GACnBA,EAAI3D,QAAQb,EAAKa,QAChByD,GAAK,KAKTA,EAQAF,MAAM,kDANNvE,EAAkB4E,KAAKzE,GACvBiE,OAAOzC,aAAa2C,QAAQ,oBAAoB1B,KAAKC,UAAU7C,IAC/DuE,MAAM,oDAWd,IAAIrD,EAAa0B,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,iBACpDlD,EAAKyB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,SAE9B,OAAfnD,GAECA,EAAawD,QAAQ,SAACG,EAAQzE,GAEvByE,EAAQC,KAAK3E,EAAK2E,KAEjB5D,EAAa6D,OAAO3E,EAAE,GACtBgE,OAAOzC,aAAa2C,QAAQ,eAAe1B,KAAKC,UAAU3B,OAS5D,OAAPC,GAECA,EAAKuD,QAAQ,SAACG,EAAQzE,GAEfyE,EAAQC,KAAK3E,EAAK2E,KAEjB3D,EAAK4D,OAAO3E,EAAE,GACdgE,OAAOzC,aAAa2C,QAAQ,OAAO1B,KAAKC,UAAU1B,YAW5D,GAAoB,eAAjBP,EAAE0C,OAAOxC,MAAqB,CAGnC,GAAiD,OAA9CsD,OAAOzC,aAAa0C,QAAQ,gBAAuB,CAElD,IAAInD,EAAa,CAACf,GAClBiE,OAAOzC,aAAa2C,QAAQ,eAAe1B,KAAKC,UAAU3B,IAC1DqD,MAAM,kDAGL,CAED,IAAIrD,EAAa0B,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,iBACpDI,GAAK,EAETvD,EAAawD,QAAQ,SAAAC,GAEdA,EAAI3D,QAAQb,EAAKa,QAChByD,GAAK,KAKTA,EAQAF,MAAM,6CANNrD,EAAa0D,KAAKzE,GAClBiE,OAAOzC,aAAa2C,QAAQ,eAAe1B,KAAKC,UAAU3B,IAC1DqD,MAAM,+CAWd,IAAIvE,EAAkB4C,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,sBACzDlD,EAAKyB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,SAEzB,OAApBrE,GAECA,EAAkB0E,QAAQ,SAACG,EAAQzE,GAE5ByE,EAAQC,KAAK3E,EAAK2E,KAEjB9E,EAAkB+E,OAAO3E,EAAE,GAC3BgE,OAAOzC,aAAa2C,QAAQ,oBAAoB1B,KAAKC,UAAU7C,OAQjE,OAAPmB,GAECA,EAAKuD,QAAQ,SAACG,EAAQzE,GAEfyE,EAAQC,KAAK3E,EAAK2E,KAEjB3D,EAAK4D,OAAO3E,EAAE,GACdgE,OAAOzC,aAAa2C,QAAQ,OAAO1B,KAAKC,UAAU1B,YAU5D,GAAoB,SAAjBP,EAAE0C,OAAOxC,MAAe,CAE7B,GAAyC,OAAtCsD,OAAOzC,aAAa0C,QAAQ,QAAe,CAE1C,IAAIlD,EAAK,CAAChB,GACViE,OAAOzC,aAAa2C,QAAQ,OAAO1B,KAAKC,UAAU1B,IAClDoD,MAAM,0CAGL,CAED,IAAIpD,EAAKyB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,SAC5CI,GAAK,EAETtD,EAAKuD,QAAQ,SAAAC,GAENA,EAAI3D,QAAQb,EAAKa,QAChByD,GAAK,KAKTA,EAQAF,MAAM,qCANNpD,EAAKyD,KAAKzE,GACViE,OAAOzC,aAAa2C,QAAQ,OAAO1B,KAAKC,UAAU1B,IAClDoD,MAAM,uCAWd,IAAIrD,EAAa0B,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,iBACpDrE,EAAkB4C,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,sBAE3C,OAAfnD,GAECA,EAAawD,QAAQ,SAACG,EAAQzE,GAEvByE,EAAQC,KAAK3E,EAAK2E,KAEjB5D,EAAa6D,OAAO3E,EAAE,GACtBgE,OAAOzC,aAAa2C,QAAQ,eAAe1B,KAAKC,UAAU3B,OAS/C,OAApBlB,GAECA,EAAkB0E,QAAQ,SAACG,EAAQzE,GAE5ByE,EAAQC,KAAK3E,EAAK2E,KAEjB9E,EAAkB+E,OAAO3E,EAAE,GAC3BgE,OAAOzC,aAAa2C,QAAQ,oBAAoB1B,KAAKC,UAAU7C,YAQzE,GAAoB,SAAjBY,EAAE0C,OAAOxC,MAAe,CAG7B,IAAIK,EAAKyB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,SAC5CnD,EAAa0B,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,iBACpDrE,EAAkB4C,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,sBAG3C,OAAfnD,GAECA,EAAawD,QAAQ,SAACG,EAAQzE,GAEvByE,EAAQC,KAAK3E,EAAK2E,KAEjB5D,EAAa6D,OAAO3E,EAAE,GACtBgE,OAAOzC,aAAa2C,QAAQ,eAAe1B,KAAKC,UAAU3B,OAU/C,OAApBlB,GAECA,EAAkB0E,QAAQ,SAACG,EAAQzE,GAE5ByE,EAAQC,KAAK3E,EAAK2E,KAEjB9E,EAAkB+E,OAAO3E,EAAE,GAC3BgE,OAAOzC,aAAa2C,QAAQ,oBAAoB1B,KAAKC,UAAU7C,OASjE,OAAPmB,GAECA,EAAKuD,QAAQ,SAACG,EAAQzE,GAEfyE,EAAQC,KAAK3E,EAAK2E,KAEjB3D,EAAK4D,OAAO3E,EAAE,GACdgE,OAAOzC,aAAa2C,QAAQ,OAAO1B,KAAKC,UAAU1B,OAS9DoD,MAAM,uCAKV/E,EAAK+D,SAAS,CACVvD,kBAAuE,OAApDoE,OAAOzC,aAAa0C,QAAQ,qBAA+BzB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,sBAAwB,GAC7InD,aAA6D,OAA/CkD,OAAOzC,aAAa0C,QAAQ,gBAA0BzB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,iBAAmB,GAC9HlD,KAA6C,OAAvCiD,OAAOzC,aAAa0C,QAAQ,QAAkBzB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,SAAW,MAhTnG7E,EAsTbkB,cAAc,SAACP,GAEX,OAAGA,EAAK6E,WACG7E,EAAK6E,WAAWC,UAEhB,IAxTbzF,EAAK0D,MAAM,CACPlD,kBAAuE,OAApDoE,OAAOzC,aAAa0C,QAAQ,qBAA+BzB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,sBAAwB,GAC7InD,aAA6D,OAA/CkD,OAAOzC,aAAa0C,QAAQ,gBAA0BzB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,iBAAmB,GAC9HlD,KAA6C,OAAvCiD,OAAOzC,aAAa0C,QAAQ,QAAkBzB,KAAK4B,MAAMJ,OAAOzC,aAAa0C,QAAQ,SAAW,IAN/F7E,wEAiUL,IAAAoE,EAAAnE,KACN,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEfH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KAEE1B,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAK3F,EAAAC,EAAAC,cAAC0F,EAAD,CAAMvF,MAAO6D,EAAKV,MAAOrC,QAAS+C,EAAK/C,QAASH,cAAekD,EAAKlD,mBACvGhB,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,UAAUC,OAAQ,kBAAK3F,EAAAC,EAAAC,cAAC2F,EAAD,CAAQxF,MAAO6D,EAAKV,MAAOrC,QAAS+C,EAAK/C,QAASH,cAAekD,EAAKlD,4BA1U1F8E,IAAMhE,iBCF7BiE,IAASJ,OAAO3F,EAAAC,EAAAC,cAAC8F,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ac2b6eb4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default class home extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"app\">\r\n            \r\n            <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n               \r\n                <div>\r\n               \r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                            \r\n                            {\r\n\r\n                                this.props.books.currently_reading.length !== 0 ? (\r\n\r\n                                    <div className=\"bookshelf\">\r\n                                            <div className=\"bookshelf-books\">\r\n                                            <ol className=\"books-grid\">{\r\n\r\n                                                this.props.books.currently_reading.map((book,i)=>{\r\n\r\n                                                    return(\r\n                        \r\n                                                        \r\n                                                            <li key={i}>\r\n                                                            <div className=\"book\">\r\n                                                                <div className=\"book-top\">\r\n                                                                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url('+this.props.get_thumbnail(book)+')' }}></div>\r\n                                                                <div className=\"book-shelf-changer\">\r\n                                                                    <select onChange={(e) => this.props.move_to(e,book,i)} value='currentlyReading'>\r\n                                                                        <option value=\"move\" disabled>Move to...</option>\r\n                                                                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                                        <option value=\"wantToRead\">Want to Read</option>\r\n                                                                        <option value=\"read\">Read</option>\r\n                                                                        <option value=\"none\">None</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                </div>\r\n                                                                <div className=\"book-title\">{book.title}</div>\r\n                                                                <div className=\"book-authors\">{book.authors}</div>\r\n                                                            </div>\r\n                                                            </li>\r\n                                                        \r\n                        \r\n                                                    );\r\n                                                \r\n                        \r\n                                                })\r\n\r\n\r\n                                            }\r\n\r\n                                            </ol>\r\n                                            </div>\r\n                                        </div>\r\n                                    \r\n\r\n                                ) : <h3>No Books</h3>\r\n                                \r\n\r\n                            }\r\n                    \r\n                        </ol>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                        \r\n                        {\r\n\r\n                            this.props.books.want_to_read.length !== 0 ? (\r\n\r\n                                <div className=\"bookshelf\">\r\n                                        <div className=\"bookshelf-books\">\r\n                                        <ol className=\"books-grid\">{\r\n\r\n                                            this.props.books.want_to_read.map((book,i)=>{\r\n\r\n                                                return(\r\n                    \r\n                                                    \r\n                                                        <li key={i}>\r\n                                                        <div className=\"book\">\r\n                                                            <div className=\"book-top\">\r\n                                                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url('+this.props.get_thumbnail(book)+')' }}></div>\r\n                                                            <div className=\"book-shelf-changer\">\r\n                                                                <select onChange={(e) => this.props.move_to(e,book,i)} value='wantToRead'>\r\n                                                                    <option value=\"move\" disabled>Move to...</option>\r\n                                                                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                                    <option value=\"wantToRead\">Want to Read</option>\r\n                                                                    <option value=\"read\">Read</option>\r\n                                                                    <option value=\"none\">None</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                            <div className=\"book-title\">{book.title}</div>\r\n                                                            <div className=\"book-authors\">{book.authors}</div>\r\n                                                        </div>\r\n                                                        </li>\r\n                                                    \r\n                    \r\n                                                );\r\n                                            \r\n                    \r\n                                            })\r\n\r\n\r\n                                        }\r\n\r\n                                        </ol>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n\r\n                            ) : <h3>No Books</h3>\r\n                            \r\n\r\n                        }\r\n                        \r\n                            \r\n\r\n                        </ol>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                    \r\n                    {\r\n\r\n                        this.props.books.read.length !== 0 ? (\r\n\r\n                            <div className=\"bookshelf\">\r\n                                    <div className=\"bookshelf-books\">\r\n                                    <ol className=\"books-grid\">{\r\n\r\n                                        this.props.books.read.map((book,i)=>{\r\n\r\n                                            return(\r\n                \r\n                                                \r\n                                                    <li key={i}>\r\n                                                    <div className=\"book\">\r\n                                                        <div className=\"book-top\">\r\n                                                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url('+this.props.get_thumbnail(book)+')' }}></div>\r\n                                                        <div className=\"book-shelf-changer\">\r\n                                                            <select onChange={(e) => this.props.move_to(e,book,i)} value='read'>\r\n                                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                                <option value=\"read\">Read</option>\r\n                                                                <option value=\"none\">None</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div className=\"book-title\">{book.title}</div>\r\n                                                        <div className=\"book-authors\">{book.authors}</div>\r\n                                                    </div>\r\n                                                    </li>\r\n                                                \r\n                \r\n                                            );\r\n                                        \r\n                \r\n                                        })\r\n\r\n\r\n                                    }\r\n\r\n                                    </ol>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n\r\n                        ) : <h3>No Books</h3>\r\n                        \r\n\r\n                    }\r\n                    \r\n\r\n\r\n                    </ol>\r\n                    </div>\r\n                </div>\r\n               \r\n                </div>\r\n            \r\n            </div>\r\n         \r\n         \r\n         \r\n            <div className=\"open-search\">\r\n                    <Link to={'/search'}>\r\n                        <button style={{textDecoration:'none',border:'none'}}>Add a book</button>\r\n                    </Link>\r\n            </div>\r\n            </div>\r\n            \r\n          </div>\r\n        )\r\n    }\r\n    \r\n}\r\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport {Link} from 'react-router-dom';\r\nimport './App.css'\r\n\r\n\r\n\r\n\r\nexport default class search extends Component {\r\n\r\n    state={\r\n        query:'',\r\n        results: [],\r\n        searching: false,\r\n        not_found: false,\r\n    }\r\n\r\n\r\n    search=(e)=>{\r\n\r\n        if(e.target.value === '') {\r\n            \r\n            this.setState({\r\n                results : [],\r\n                not_found:false,\r\n                searching:false,\r\n                query:e.target.value,\r\n            })\r\n\r\n            return\r\n        };\r\n\r\n        this.setState({\r\n            searching : true,\r\n            not_found : false,\r\n            query :e.target.value,\r\n        })\r\n        \r\n        BooksAPI.search(e.target.value).then(result=>{\r\n\r\n\r\n            if(result!==undefined && !result.error){\r\n              \r\n                this.setState({\r\n                    results : result !== null ? result : [],\r\n                    not_found:false,\r\n                    searching:false,\r\n                })\r\n           \r\n            }else{\r\n\r\n                this.setState({\r\n                    results : [],\r\n                    not_found: this.state.query === '' ? false : true,\r\n                    searching:false,\r\n                })\r\n\r\n            }\r\n            \r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n\r\n                    <Link to={'/'}>\r\n                       <button className=\"close-search\" style={{textDecoration:'none',border:'none'}} >Close</button>\r\n                    </Link> \r\n\r\n\r\n                  <div className=\"search-books-input-wrapper\">\r\n                    \r\n                    <input type=\"text\" placeholder=\"Search by title or author\" onChange={(e)=>this.search(e)}/>\r\n    \r\n                  </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                  <ol className=\"books-grid\">\r\n                  \r\n                  \r\n                    {\r\n\r\n                        this.state.results.length !== 0 && this.state.query !== '' ? (\r\n\r\n                            <div className=\"bookshelf\">\r\n                                    <div className=\"bookshelf-books\">\r\n                                    <ol className=\"books-grid\">{\r\n\r\n                                        this.state.results.map((book,i)=>{\r\n\r\n                                            return(\r\n                \r\n                                                \r\n                                                    <li key={i}>\r\n                                                    <div className=\"book\">\r\n                                                        <div className=\"book-top\">\r\n                                                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url('+this.props.get_thumbnail(book)+')' }}></div>\r\n                                                        <div className=\"book-shelf-changer\">\r\n                                                            <select onChange={(e) => this.props.move_to(e,book,i)} value='move'>\r\n                                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                                <option value=\"read\">Read</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div className=\"book-title\">{book.title}</div>\r\n                                                        <div className=\"book-authors\">{book.authors}</div>\r\n                                                    </div>\r\n                                                    </li>\r\n                                                \r\n                \r\n                                            );\r\n                                        \r\n                \r\n                                        })\r\n\r\n\r\n                                    }\r\n\r\n                                    </ol>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n\r\n                        ) : (\r\n\r\n                            this.state.searching ? <h3>Searching...</h3> : this.state.query==='' ? <h3>Search Books</h3> : this.state.not_found ? <h3>No Result</h3> : <h3>Search Books</h3>\r\n\r\n                        )\r\n                        \r\n\r\n                    }\r\n\r\n\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport {BrowserRouter , Route} from 'react-router-dom';\nimport Home from './home'\nimport Search from './search'\n\n\nclass BooksApp extends React.Component {\n  \n  constructor(){\n    super();\n\n    this.state={\n        currently_reading: window.localStorage.getItem('currently_reading') !==null ? JSON.parse(window.localStorage.getItem('currently_reading')) : [],\n        want_to_read: window.localStorage.getItem('want_to_read') !==null ? JSON.parse(window.localStorage.getItem('want_to_read')) : [],\n        read: window.localStorage.getItem('read') !==null ? JSON.parse(window.localStorage.getItem('read')) : [],\n    }\n    \n  }\n\n\n  move_to=(e,book,key)=>{\n\n\n\n\n        if(e.target.value==='currentlyReading'){\n\n\n\n            // checking if the currently reading is present in local storage if not then creating it otherwise \n            // checking if the book is alreading present in \"currently reading\" if not then adding it.\n            // then checking other two sections \"want to read\" and \"read\" if they have the book then removing it from their.\n            if(window.localStorage.getItem('currently_reading')===null){\n              \n                let currently_reading=[book];\n                window.localStorage.setItem('currently_reading',JSON.stringify(currently_reading));\n                alert('Book Added to \"Currently Reading\" Successfully.')\n\n\n            }else{\n\n                let currently_reading=JSON.parse(window.localStorage.getItem('currently_reading'));\n                let flag=false;\n\n                currently_reading.forEach(obj => {\n                    if(obj.title===book.title){\n                        flag=true;\n                    }\n                });\n\n\n                if(!flag){\n                  \n                    currently_reading.push(book);\n                    window.localStorage.setItem('currently_reading',JSON.stringify(currently_reading))\n                    alert('Book Added to \"Currently Reading\" Successfully.')\n\n                }else{\n\n                    alert('Book is Already Added to \"Currently Reading\".')\n\n                }\n               \n\n            }\n\n            let want_to_read=JSON.parse(window.localStorage.getItem('want_to_read'));\n            let read=JSON.parse(window.localStorage.getItem('read'));\n\n            if(want_to_read!==null){\n              \n                want_to_read.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        want_to_read.splice(i,1);\n                        window.localStorage.setItem('want_to_read',JSON.stringify(want_to_read));\n\n                    }\n\n                });\n              \n              \n            }\n            \n            if(read!==null){\n\n                read.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        read.splice(i,1);\n                        window.localStorage.setItem('read',JSON.stringify(read));\n\n                    }\n\n                });\n\n\n            }\n\n\n\n        }else if(e.target.value==='wantToRead'){\n          \n          \n            if(window.localStorage.getItem('want_to_read')===null){\n              \n                let want_to_read=[book];\n                window.localStorage.setItem('want_to_read',JSON.stringify(want_to_read));\n                alert('Book Added to \"Want to Read\" Successfully.')\n\n\n            }else{\n\n                let want_to_read=JSON.parse(window.localStorage.getItem('want_to_read'));\n                let flag=false;\n\n                want_to_read.forEach(obj =>{\n\n                    if(obj.title===book.title){\n                        flag=true;\n                    }\n\n                })\n\n                if(!flag){\n                  \n                    want_to_read.push(book);\n                    window.localStorage.setItem('want_to_read',JSON.stringify(want_to_read))\n                    alert('Book Added to \"Want to Read\" Successfully.')\n\n                }else{\n\n                    alert('Book is Already Added to \"Want to Read\".')\n\n                }\n               \n\n            }\n\n            let currently_reading=JSON.parse(window.localStorage.getItem('currently_reading'));\n            let read=JSON.parse(window.localStorage.getItem('read'));\n\n            if(currently_reading!==null){\n\n                currently_reading.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        currently_reading.splice(i,1);\n                        window.localStorage.setItem('currently_reading',JSON.stringify(currently_reading));\n\n                    }\n\n                });\n\n            }\n            \n            if(read!==null){\n\n                read.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        read.splice(i,1);\n                        window.localStorage.setItem('read',JSON.stringify(read));\n\n                    }\n\n                });\n\n\n            }\n\n\n        }else if(e.target.value==='read'){\n\n            if(window.localStorage.getItem('read')===null){\n              \n                let read=[book];\n                window.localStorage.setItem('read',JSON.stringify(read));\n                alert('Book Added to \"Read\" Successfully.')\n\n\n            }else{\n\n                let read=JSON.parse(window.localStorage.getItem('read'));\n                let flag=false;\n\n                read.forEach(obj =>{\n\n                    if(obj.title===book.title){\n                        flag=true;\n                    }\n\n                })\n\n                if(!flag){\n                  \n                    read.push(book);\n                    window.localStorage.setItem('read',JSON.stringify(read))\n                    alert('Book Added to \"Read\" Successfully.')\n\n                }else{\n\n                    alert('Book is Already Added to \"Read\".')\n\n                }\n               \n\n            }\n\n            let want_to_read=JSON.parse(window.localStorage.getItem('want_to_read'));\n            let currently_reading=JSON.parse(window.localStorage.getItem('currently_reading'));\n\n            if(want_to_read!==null){\n              \n                want_to_read.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        want_to_read.splice(i,1);\n                        window.localStorage.setItem('want_to_read',JSON.stringify(want_to_read));\n\n                    }\n\n                });\n              \n              \n            }\n            \n            if(currently_reading!==null){\n\n                currently_reading.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        currently_reading.splice(i,1);\n                        window.localStorage.setItem('currently_reading',JSON.stringify(currently_reading));\n\n                    }\n\n                });\n\n            }\n\n        }else if(e.target.value==='none'){\n\n\n            let read=JSON.parse(window.localStorage.getItem('read'));\n            let want_to_read=JSON.parse(window.localStorage.getItem('want_to_read'));\n            let currently_reading=JSON.parse(window.localStorage.getItem('currently_reading'));\n\n            //searching the book in \"want to read\" and removing it...\n            if(want_to_read!==null){\n              \n                want_to_read.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        want_to_read.splice(i,1);\n                        window.localStorage.setItem('want_to_read',JSON.stringify(want_to_read));\n\n                    }\n\n                });\n              \n              \n            }\n\n            //searching the book in \"currently reading\" and removing it...\n            if(currently_reading!==null){\n\n                currently_reading.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        currently_reading.splice(i,1);\n                        window.localStorage.setItem('currently_reading',JSON.stringify(currently_reading));\n\n                    }\n\n                });\n\n            }\n\n            //searching the book in \"read\" and removing it...\n            if(read!==null){\n\n                read.forEach((element,i) => {\n                    \n                    if(element.id===book.id){\n\n                        read.splice(i,1);\n                        window.localStorage.setItem('read',JSON.stringify(read));\n\n                    }\n\n                });\n\n\n            }\n\n            alert('Book has been removed Successfully.')\n\n\n        }\n\n        this.setState({\n            currently_reading: window.localStorage.getItem('currently_reading') !==null ? JSON.parse(window.localStorage.getItem('currently_reading')) : [],\n            want_to_read: window.localStorage.getItem('want_to_read') !==null ? JSON.parse(window.localStorage.getItem('want_to_read')) : [],\n            read: window.localStorage.getItem('read') !==null ? JSON.parse(window.localStorage.getItem('read')) : [],\n        });\n\n  }\n\n\n  get_thumbnail=(book)=>{\n\n      if(book.imageLinks){\n          return book.imageLinks.thumbnail\n      }else{\n          return '' //image not found\n      }\n\n  }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n      \n      <BrowserRouter>\n        \n        <Route exact path='/' render={()=> <Home books={this.state} move_to={this.move_to} get_thumbnail={this.get_thumbnail} />} ></Route>\n        <Route path='/search' render={()=> <Search books={this.state} move_to={this.move_to} get_thumbnail={this.get_thumbnail} />}></Route>\n     \n      </BrowserRouter>\n  \n  \n      </div>\n    );\n  }\n\n\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}